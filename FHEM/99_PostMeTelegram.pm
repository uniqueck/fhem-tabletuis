# *** WARNING: DO NOT MODIFY *** This is a generated Perl source code! 
# 
# Generated by LF-ET 2.1.5 (170306b), http://www.lohrfink.de/lfet
# From decision table
# "/data/github/fhem/fhem-tabletuis/FHEM/PostMeTelegram.lfet"
# 14.03.2017 18:25
# 
# Changes to this code resulting from refactorings can be synchronised
# with LF-ET using the function "Scrapbook Import".
# 
# Prolog Decision Table ---->
# $$Extension=pm
# $$Filename=99_PostMeTelegram

package main;

use strict;
use warnings;
use POSIX;

sub
PostMeTelegram_Initialize($$)
{
  my ($hash) = @_;
}

############################################
# Versenden von PostMe Listen per Telegram
############################################
sub sendList($$$) {
  my ($recipient, $subject, $text) = @_;
  my @items = split(",", $text);
  @items = sort(@items);
  
  fhem ("set fhemBot message \@".$recipient." $subject:\n - ".join("\n - ", @items));
  return;
}

#############################################################################
#
#  TelegramInlineKeyboard
#
#############################################################################
sub telegramRecognition($){
   my ($event)    = @_;
   my $querypeer      = ReadingsVal("fhemBot", "queryPeer", 0);
   my $msgpeer        = ReadingsVal("fhemBot", "msgPeer", 0);
   my $queryReplyMsgId= ReadingsVal("fhemBot", "queryReplyMsgId", 0);
   my $MsgId          = ReadingsVal("fhemBot", "MsgId", 0);
   my $menuMsgId      = ReadingsVal("fhemBot", "menuMsgId", $queryReplyMsgId);
   my $calldata       = ReadingsVal("fhemBot", "callData", "");
   my $tg;
   my $dp;
   my $dm;
   my $res;
   my $cmd;
   my $click;
   my ($cb1,$cb2,$cb1raw);
  
   my $postItDevice = "postme_Listen";
   my $state = "INIT"; # step control for a decision table
   my @postItListen;
   
   do {
    # Prolog Decision Table <----
    
    my $b99_PostMeTelegram_RuleExecuted = 0;
    
    # Condition B01/01: state / INIT / doing init stuff
    if ($state eq "INIT")
    {
        # Rule R01 ---->
        
        $b99_PostMeTelegram_RuleExecuted = 1;
        
        # Trace ---->
        Log 3, "PostMeTelegram, 20170307.000026, 11, 1";
        # Trace <----
        
        # Action A01: identify all postIt lists
        for (my $i = 1; $i <= ReadingsVal($postItDevice, "postmeCnt",0); $i++) {
                   push(@postItListen, ReadingsVal($postItDevice, sprintf("postme%02dName",$i),""));
        }
        @postItListen = sort(@postItListen) if(scalar @postItListen > 0);
        
        # Action A05/02: state / 1 / 1
        $state = "1";
        
        # Rule R01 <----
    
    # Condition B01/02: state / 1 / 1
    }
    elsif ($state eq "1")
    {
        
        # Condition B02: klick event from inline keyboard
        if ( $event =~ /queryData\:\s(.*)/ )
        {
            
            # Prolog Condition B04 ---->
            ($cb1,$cb2) = split(/ /,$1,2);
            Log 3, "Telegram Notification Bearbeitung queryData $cb1 $cb2";
            # Prolog Condition B04 <----
            
            # Condition B04/01: menuentry / MAIN / Hauptmenü
            if ($cb1 eq "Hauptmenü")
            {
                
                # Condition B05: exists postIt lists
                if (scalar @postItListen > 0)
                {
                    # Rule R02 ---->
                    
                    $b99_PostMeTelegram_RuleExecuted = 1;
                    
                    # Trace ---->
                    Log 3, "PostMeTelegram, 20170307.000026, 11, 1";
                    # Trace <----
                    
                    # Action A03/01: send menuentries for main menu / PS / PostIt und Steuerung
                    fhem("set fhemBot queryInline \@$querypeer (PostIt) (Steuerung) Hauptmenü");
                    
                    # Action A05/01: state / END / end
                    $state = "END";
                    
                    # Rule R02 <----
                }
                else
                {
                    # Rule R03 ---->
                    
                    $b99_PostMeTelegram_RuleExecuted = 1;
                    
                    # Trace ---->
                    Log 3, "PostMeTelegram, 20170307.000026, 11, 1";
                    # Trace <----
                    
                    # Action A03/02: send menuentries for main menu / S / nur Steuerung
                    fhem("set fhemBot queryInline \@$querypeer (Steuerung) Hauptmenü");
                    
                    # Action A05/01: state / END / end
                    $state = "END";
                    
                    # Rule R03 <----
                }
            
            # Condition B04/02: menuentry / POSTIT / Listenverwaltung
            }
            elsif ($cb1 eq "PostIt")
            {
                # Rule R04 ---->
                
                $b99_PostMeTelegram_RuleExecuted = 1;
                
                # Trace ---->
                Log 3, "PostMeTelegram, 20170307.000026, 11, 1";
                # Trace <----
                
                # Action A02: new menuMsgId
                $menuMsgId = $queryReplyMsgId;
                
                # Action A04: send menuentries for postIt
                fhem("set fhemBot queryEditInline $menuMsgId \@$querypeer (Hauptmenü) (Einkauf) (Baumarkt) PostIt Listenverwaltung;");
                
                # Action A05/01: state / END / end
                $state = "END";
                
                # Rule R04 <----
            
            # Condition B04/03: menuentry / CTRL / Steuerung (aktuell noch kein Funktion dahinter)
            }
            elsif ($cb1 eq "Steuerung")
            {
                # Rule R05 ---->
                
                $b99_PostMeTelegram_RuleExecuted = 1;
                
                # Trace ---->
                Log 3, "PostMeTelegram, 20170307.000026, 11, 1";
                # Trace <----
                
                # Action A02: new menuMsgId
                $menuMsgId = $queryReplyMsgId;
                
                # Action A05/01: state / END / end
                $state = "END";
                
                # Rule R05 <----
            
            # Condition B04/04: menuentry / LIST / eine Liste
            }
            elsif ( $cb1 =~ /((Einkauf)|(Baumarkt)).*/ )
            {
                # Rule R06 ---->
                
                $b99_PostMeTelegram_RuleExecuted = 1;
                
                # Trace ---->
                Log 3, "PostMeTelegram, 20170307.000026, 11, 1";
                # Trace <----
                
                # Action A05/01: state / END / end
                $state = "END";
                
                # Rule R06 <----
            }
            else
            {
                # Rule R07 ---->
                
                $b99_PostMeTelegram_RuleExecuted = 1;
                
                # Trace ---->
                Log 3, "PostMeTelegram, 20170307.000026, 11, 1";
                # Trace <----
                
                # Action A05/01: state / END / end
                $state = "END";
                
                # Rule R07 <----
            }
        }
        else
        {
            
            # Condition B03: menudata
            if ( $event =~ /menuData\:\s*(.*)\s*(.*)/ )
            {
                
                # Condition B05: exists postIt lists
                if (scalar @postItListen > 0)
                {
                    # Rule R08 ---->
                    
                    $b99_PostMeTelegram_RuleExecuted = 1;
                    
                    # Trace ---->
                    Log 3, "PostMeTelegram, 20170307.000026, 11, 1";
                    # Trace <----
                    
                    # Action A03/01: send menuentries for main menu / PS / PostIt und Steuerung
                    fhem("set fhemBot queryInline \@$querypeer (PostIt) (Steuerung) Hauptmenü");
                    
                    # Action A05/01: state / END / end
                    $state = "END";
                    
                    # Rule R08 <----
                }
                else
                {
                    # Rule R09 ---->
                    
                    $b99_PostMeTelegram_RuleExecuted = 1;
                    
                    # Trace ---->
                    Log 3, "PostMeTelegram, 20170307.000026, 11, 1";
                    # Trace <----
                    
                    # Action A03/02: send menuentries for main menu / S / nur Steuerung
                    fhem("set fhemBot queryInline \@$querypeer (Steuerung) Hauptmenü");
                    
                    # Action A05/01: state / END / end
                    $state = "END";
                    
                    # Rule R09 <----
                }
            }
            else
            {
                # Rule R10 ---->
                
                $b99_PostMeTelegram_RuleExecuted = 1;
                
                # Trace ---->
                Log 3, "PostMeTelegram, 20170307.000026, 11, 1";
                # Trace <----
                
                # Action A05/01: state / END / end
                $state = "END";
                
                # Rule R10 <----
            }
        }
    }
    
    if (!$b99_PostMeTelegram_RuleExecuted)
    {
        
        # Trace ---->
        Log 3, "PostMeTelegram, 20170307.000026, 11, 1";
        # Trace <----
        
        # Error ---->
        # coded in decision table
        warn "keine Regel wurde ausgeführt";
        # Error <----
        
    }
    
    # Epilog Decision Table ---->
} while($state ne "END");
}

1;
# Epilog Decision Table <----

# End of generated Perl source code
# Generated by LF-ET 2.1.5 (170306b), http://www.lohrfink.de/lfet

